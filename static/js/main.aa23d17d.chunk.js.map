{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","addGood","good","setState","removeGood","isSelected","this","className","type","onClick","map","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oQAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAQ,CACNC,aAAc,OAFlB,EAKEC,QAAU,SAACC,GACT,EAAKC,SAAS,CAAEH,aAAcE,KANlC,EASEE,WAAa,WACX,EAAKD,SAAS,CAAEH,aAAc,MAVlC,EAaEK,WAAa,SAACH,GACZ,OAAO,EAAKH,MAAMC,eAAiBE,GAdvC,4CAiBE,WAAU,IAAD,OACCF,EAAiBM,KAAKP,MAAtBC,aAER,OACE,uBAAMO,UAAU,oBAAhB,UACE,qBAAIA,UAAU,sCAAd,UACGP,EAAY,UACNA,EADM,gBAET,oBACHA,GAEC,wBACE,UAAQ,cACRQ,KAAK,SACLD,UAAU,cACVE,QAASH,KAAKF,gBAIpB,uBAAOG,UAAU,QAAjB,SACE,gCACGV,EAAMa,KAAI,SAAAR,GACT,OACE,qBACE,UAAQ,OAERK,UAAWI,IACT,CAAE,+BAAgC,EAAKN,WAAWH,KAJtD,UAOE,6BACG,EAAKG,WAAWH,GAEb,wBACE,UAAQ,eACRM,KAAK,SACLD,UAAU,iBACVE,QAAS,WACP,EAAKL,cALT,eAWA,wBACE,UAAQ,YACRI,KAAK,SACLD,UAAU,SACVE,QAAS,WACP,EAAKR,QAAQC,IALjB,iBAYN,oBACE,UAAQ,YACRK,UAAU,eAFZ,SAIGL,MAnCEA,iBA1CvB,GAAyBU,IAAMC,WCnB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.aa23d17d.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    selectedGood: 'Jam',\n  };\n\n  addGood = (good: string) => {\n    this.setState({ selectedGood: good });\n  };\n\n  removeGood = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  isSelected = (good: string) => {\n    return this.state.selectedGood === good;\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        <h1 className=\"title is-flex is-align-items-center\">\n          {selectedGood\n            ? `${selectedGood} is selected`\n            : 'No goods selected'}\n          {selectedGood && (\n            /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n            <button\n              data-cy=\"ClearButton\"\n              type=\"button\"\n              className=\"delete ml-3\"\n              onClick={this.removeGood}\n            />\n          )}\n        </h1>\n        <table className=\"table\">\n          <tbody>\n            {goods.map(good => {\n              return (\n                <tr\n                  data-cy=\"Good\"\n                  key={good}\n                  className={classNames(\n                    { 'has-background-success-light': this.isSelected(good) },\n                  )}\n                >\n                  <td>\n                    {this.isSelected(good)\n                      ? (\n                        <button\n                          data-cy=\"RemoveButton\"\n                          type=\"button\"\n                          className=\"button is-info\"\n                          onClick={() => {\n                            this.removeGood();\n                          }}\n                        >\n                          -\n                        </button>\n                      ) : (\n                        <button\n                          data-cy=\"AddButton\"\n                          type=\"button\"\n                          className=\"button\"\n                          onClick={() => {\n                            this.addGood(good);\n                          }}\n                        >\n                          +\n                        </button>\n                      )}\n                  </td>\n                  <td\n                    data-cy=\"GoodTitle\"\n                    className=\"is-vcentered\"\n                  >\n                    {good}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}